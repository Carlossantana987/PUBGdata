{"ast":null,"code":"var _jsxFileName = \"/Users/carlosrsantana/Documents/project646/pubgData/src/components/Match.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Match(props) {\n  _s2();\n\n  const [match, useMatch] = useState(\"\");\n  const [date, useDate] = useState(\"\");\n\n  const mapConv = name => {\n    let maps = {\n      Baltic_Main: \"Erangel\",\n      Chimera_Main: \"Paramo\",\n      Desert_Main: \"Miramar\",\n      DihorOtok_Main: \"Vikendi\",\n      Erangel_Main: \"Erangel\",\n      Heaven_Main: \"Haven\",\n      Range_Main: \"Camp Jackal\",\n      Savage_Main: \"Sanhok\",\n      Summerland_Main: \"Karakin\",\n      Tiger_Main: \"Taego\"\n    };\n    return maps[name];\n  };\n\n  const durationConv = duration => {\n    let hrs = ~~(duration / 3600);\n    let mins = ~~(duration % 3600 / 60);\n    let secs = ~~duration % 60;\n    let ret = \"\";\n\n    if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n  };\n\n  const dateConv = date => {\n    var today = new Date();\n    var matchDate = new Date(date);\n    var diffMs = today - matchDate;\n    var diffDays = ~~(diffMs / 86400000);\n    var diffHrs = ~~(diffMs % 86400000 / 3600000);\n    var diffMins = Math.round(diffMs % 86400000 % 3600000 / 60000);\n    return diffDays + \" D , \" + diffHrs + \" H , \" + diffMins + \" M ago\";\n  };\n\n  let config = {\n    headers: {\n      accept: \"application/vnd.api+json\",\n      authorization: \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5NWM2ZWI3MC0yNTU0LTAxM2EtYWM1YS0wM2RjYTczYmVmYjgiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNjM2NjU5Mzg2LCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6InB1YmxpY2lvdXMifQ.YwuOzSZC_gk86xYXv_hb7AymnNADh_jSIkPiS5E8cbQ\"\n    }\n  };\n  useEffect(() => {\n    var _s = $RefreshSig$();\n\n    const url = \"https://api.pubg.com/shards/steam/matches/\" + props.id;\n\n    const fetchData = async () => {\n      _s();\n\n      try {\n        const res = await fetch(url, config);\n        const json = await res.json();\n        useMatch(json.data.attributes);\n        let date = json.data.attributes.createdAt.split(\"T\");\n        useDate(date[0]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    _s(fetchData, \"20PnMkJJmWs6WGanwbnmMc1G19s=\", false, function () {\n      return [useMatch, useDate];\n    });\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mapConv(match.mapName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: match.gameMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: durationConv(match.duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dateConv(date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Match, \"fHVfYgaZS9agHZc5D/U7vL2Hn8Q=\");\n\n_c = Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/carlosrsantana/Documents/project646/pubgData/src/components/Match.js"],"names":["React","useEffect","useState","Match","props","match","useMatch","date","useDate","mapConv","name","maps","Baltic_Main","Chimera_Main","Desert_Main","DihorOtok_Main","Erangel_Main","Heaven_Main","Range_Main","Savage_Main","Summerland_Main","Tiger_Main","durationConv","duration","hrs","mins","secs","ret","dateConv","today","Date","matchDate","diffMs","diffDays","diffHrs","diffMins","Math","round","config","headers","accept","authorization","url","id","fetchData","res","fetch","json","data","attributes","createdAt","split","error","console","log","message","mapName","gameMode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function Match(props) {\n  const [match, useMatch] = useState(\"\");\n  const [date, useDate] = useState(\"\");\n\n  const mapConv = (name) => {\n    let maps = {\n      Baltic_Main: \"Erangel\",\n      Chimera_Main: \"Paramo\",\n      Desert_Main: \"Miramar\",\n      DihorOtok_Main: \"Vikendi\",\n      Erangel_Main: \"Erangel\",\n      Heaven_Main: \"Haven\",\n      Range_Main: \"Camp Jackal\",\n      Savage_Main: \"Sanhok\",\n      Summerland_Main: \"Karakin\",\n      Tiger_Main: \"Taego\"\n    };\n    return maps[name];\n  };\n\n  const durationConv = (duration) => {\n    let hrs = ~~(duration / 3600);\n    let mins = ~~((duration % 3600) / 60);\n    let secs = ~~duration % 60;\n\n    let ret = \"\";\n\n    if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n  };\n\n  const dateConv = (date) => {\n    var today = new Date();\n    var matchDate = new Date(date);\n    var diffMs = today - matchDate;\n    var diffDays = ~~(diffMs / 86400000);\n    var diffHrs = ~~((diffMs % 86400000) / 3600000);\n    var diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000);\n    return diffDays + \" D , \" + diffHrs + \" H , \" + diffMins + \" M ago\";\n  };\n\n  let config = {\n    headers: {\n      accept: \"application/vnd.api+json\",\n      authorization:\n        \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5NWM2ZWI3MC0yNTU0LTAxM2EtYWM1YS0wM2RjYTczYmVmYjgiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNjM2NjU5Mzg2LCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6InB1YmxpY2lvdXMifQ.YwuOzSZC_gk86xYXv_hb7AymnNADh_jSIkPiS5E8cbQ\"\n    }\n  };\n\n  useEffect(() => {\n    const url = \"https://api.pubg.com/shards/steam/matches/\" + props.id;\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, config);\n        const json = await res.json();\n        useMatch(json.data.attributes);\n\n        let date = json.data.attributes.createdAt.split(\"T\");\n        useDate(date[0]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>{mapConv(match.mapName)}</h1>\n      <h2>{match.gameMode}</h2>\n      <h3>{durationConv(match.duration)}</h3>\n      <h1>{dateConv(date)}</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}